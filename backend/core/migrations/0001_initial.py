# Generated by Django 5.1.6 on 2025-02-10 11:29

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('original_title', models.CharField(blank=True, max_length=255)),
                ('tmdb_id', models.IntegerField(unique=True)),
                ('imdb_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('ems_id', models.CharField(blank=True, max_length=50, unique=True)),
                ('synopsis', models.TextField(blank=True)),
                ('overview', models.TextField(blank=True)),
                ('audience_score', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('critics_score', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('vote_average', models.DecimalField(decimal_places=1, default=0, max_digits=3)),
                ('vote_count', models.IntegerField(default=0)),
                ('imdb_rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('imdb_votes', models.IntegerField(blank=True, null=True)),
                ('rating', models.CharField(blank=True, max_length=50)),
                ('runtime', models.CharField(blank=True, max_length=20)),
                ('original_language', models.CharField(blank=True, max_length=50)),
                ('spoken_languages', models.CharField(blank=True, max_length=255)),
                ('sound_mix', models.CharField(blank=True, max_length=100)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('release_date_theaters', models.CharField(blank=True, max_length=100)),
                ('release_date_streaming', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(blank=True, max_length=50)),
                ('box_office', models.CharField(blank=True, max_length=50)),
                ('revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('poster_path', models.URLField(blank=True, max_length=500)),
                ('media_url', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-release_date'],
            },
        ),
        migrations.CreateModel(
            name='Distributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('movies', models.ManyToManyField(related_name='distributors', to='core.movie')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_comments', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='core.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.movie')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MovieCast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('order', models.IntegerField(default=0)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cast_members', to='core.movie')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='MovieCrew',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('director', models.CharField(blank=True, max_length=255)),
                ('producer', models.TextField(blank=True)),
                ('screenwriter', models.CharField(blank=True, max_length=255)),
                ('writers', models.TextField(blank=True)),
                ('director_of_photography', models.CharField(blank=True, max_length=255)),
                ('music_composer', models.CharField(blank=True, max_length=255)),
                ('movie', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='crew', to='core.movie')),
            ],
        ),
        migrations.CreateModel(
            name='ProductionCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('movies', models.ManyToManyField(related_name='production_companies', to='core.movie')),
            ],
            options={
                'verbose_name_plural': 'Production Companies',
            },
        ),
        migrations.CreateModel(
            name='ProductionCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('movies', models.ManyToManyField(related_name='production_countries', to='core.movie')),
            ],
            options={
                'verbose_name_plural': 'Production Countries',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('login_type', models.CharField(blank=True, max_length=50, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('full_name', models.CharField(blank=True, max_length=100, null=True)),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('currency', models.CharField(blank=True, max_length=10, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='core.movie')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'movie')},
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, message='Rating must be at least 1'), django.core.validators.MaxValueValidator(10, message='Rating cannot exceed 10')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='core.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'movie')},
            },
        ),
        migrations.CreateModel(
            name='WatchList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('watched', models.BooleanField(default=False)),
                ('watched_at', models.DateTimeField(blank=True, null=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_watchlists', to='core.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-added_at'],
                'unique_together': {('user', 'movie')},
            },
        ),
    ]
